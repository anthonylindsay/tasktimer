/**
 * @file - simple file to house our mixins
 */

// Let's use rem instead of em for measurement

@function parseInt($n) { /* 2 */
  @return $n / ($n * 0 + 1);
}

@mixin rem($property, $values) {
  $px : (); /* 3 */
  $rem: (); /* 3 */

  @each $value in $values { /* 4 */

    @if $value == 0 or $value == auto { /* 5 */
      $px : append($px , $value);
      $rem: append($rem, $value);
    }

    @else {
      $unit: unit($value);    /* 6 */
      $val: parseInt($value); /* 6 */

      @if $unit == "px" {  /* 7 */
        $px : append($px,  $value);
        $rem: append($rem, ($val / 10 + rem));
      }

      @if $unit == "rem" { /* 7 */
        $px : append($px,  ($val * 10 + px));
        $rem: append($rem, $value);
      }
    }
  }

  @if $px == $rem {     /* 8 */
    #{$property}: $px;  /* 9 */
  } @else {
    #{$property}: $px;  /* 9 */
    #{$property}: $rem; /* 9 */
  }
}
// Default radius to put on items like buttons
@mixin border-radius-default {
  @include border-radius(0.25rem);
}

// Default button mixin we can use for all buttons across the app
@mixin button {
  @include rem(padding, 0.5rem 1rem);
  background-color: $orange-300;
  color: $black;
  display: inline-block;
  font-weight: bold;
  text-transform: uppercase;
  @include shadow;
  width: 100%;
    &:hover {
      background-color: lighten($pink, 10%);
    }
}

// A subtle shadow.
@mixin shadow {
  -webkit-box-shadow: 0 2px 1px 0 rgba(0,0,0,0.4);
  box-shadow: 0 2px 1px 0 rgba(0,0,0,0.4);
}
